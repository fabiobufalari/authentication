# Configurações do Servidor
server:
  port: 8081
  servlet:
    context-path: /api

# Configurações GLOBAIS do Spring
spring:
  application:
    name: auth-service
  jpa:
    hibernate:
      ddl-auto: none
      use-new-id-generator-mappings: false  # Crítico para UUID
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        id:
          generator: org.hibernate.id.UUIDGenerator
          type: org.hibernate.type.UUIDCharType

# Security Configuration
security:
  jwt:
    token:
      secret-key: "umaSenhaMuitoSeguraParaJWT123456!"
      expire-length: 86400000
    refresh-token:
      expire-length: 86400000

# Perfil DEFAULT (PostgreSQL)
---
spring:
  config:
    activate:
      on-profile: default
  datasource:
    url: jdbc:postgresql://localhost:5432/authdb  # Nome do serviço Docker
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    schemas: public
    validate-on-migrate: true
    sql-migration-prefix: V
    sql-migration-separator: __
    sql-migration-suffixes: .sql
    ignore-missing-migrations: true
    placeholders:
      uuid-type: uuid

# Perfil de TESTES (H2 em memória)
---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop  # Recria o schema para testes
  flyway:
    enabled: false  # Desabilita Flyway para H2

# Configurações comuns
redis:
  host: redis  # Nome do serviço Docker
  port: 6379
cache:
  type: redis
  redis:
    time-to-live: 3600000

cors:
  allowed-origins: "https://meusite.com, http://localhost:3000"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized

springdoc:
  api-docs:
    path: /docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method