# =========================================
# Server Configuration
# =========================================
server:
  port: ${SERVER_PORT:8080} # Porta padrão para auth-service, com fallback
  #servlet:
    #context-path: /auth # <<< MANTIDO O CONTEXT PATH /api
# =========================================
# Spring Boot Application Configuration
# =========================================
spring:
  application:
    name: authentication-service
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update} # update para dev, validate/none para prod
      # use-new-id-generator-mappings: false # Geralmente não necessário para GenerationType.UUID com PostgreSQL
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${JPA_FORMAT_SQL:true}
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/buildingDB} # Fallback para dev local
    username: ${POSTGRES_USER:postgres}   # Fallback
    password: ${POSTGRES_PASSWORD:postgres} # Fallback
    driver-class-name: org.postgresql.Driver

# =========================================
# JWT Configuration (Este serviço GERA e VALIDA)
# =========================================
security:
  jwt:
    token:
      # Chave secreta usada para ASSINAR e VALIDAR tokens.
      # IMPORTANTE: DEVE ser uma string longa e segura (mínimo 32 bytes para HS256).
      # Use uma variável de ambiente em produção.
      secret-key: ${JWT_SECRET_KEY:your-VERY-strong-and-long-secret-key-for-auth-service-at-least-32-bytes}
      # Duração do Access Token (ex: 1 hora = 3600000 ms)
      expire-length: ${JWT_ACCESS_EXPIRATION:3600000}
    refresh-token:
      # Duração do Refresh Token (ex: 7 dias = 604800000 ms)
      expire-length: ${JWT_REFRESH_EXPIRATION:604800000}

# =========================================
# Logging Configuration
# =========================================
logging:
  level:
    org.springframework.web: INFO
    org.springframework.security: INFO
    com.constructionhub.authentication: DEBUG # Pacote raiz deste serviço
    org.hibernate.SQL: DEBUG
    # org.hibernate.type.descriptor.sql: TRACE

# =========================================
# Swagger/OpenAPI Configuration
# =========================================
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# =========================================
# Actuator Configuration
# =========================================
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, env
  endpoint:
    health:
      show-details: when_authorized